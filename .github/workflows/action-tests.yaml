name: Action tests
on: [push]
jobs:

  compare-json:
    name: Compare JSON
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./compare-json/tests

  get-npm-registry-versions:
    name: Get npm registry versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./get-npm-registry-versions/tests

#  jsonify:
#    name: JSONify
#    runs-on: ubuntu-latest
#    env:
#      value: a"b
#    steps:
#      - uses: actions/checkout@v3
#      - id: jsonify
#        uses: ./jsonify
#        with:
#          value: ${{ env.value }}
#      - run: echo 'JSON version of '\''${{ env.value }}'\'' is ${{ steps.jsonify.outputs.json }}'
#        shell: sh
#  build-version-tag:
#    name: Build version tag
#    runs-on: ubuntu-latest
#    env:
#      version: 0.0.0
#    steps:
#      - uses: actions/checkout@v3
#      - id: build-version-tag
#        uses: ./build-version-tag
#        with:
#          version: ${{ env.version }}
#      - run: echo Version tag for \'${{ env.version }}\' version is \'${{ steps.build-version-tag.outputs.version-tag }}\'
#        shell: sh
#  get-package-version:
#    name: Get package version
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - id: get-package-version
#        uses: ./get-package-version
#      - id: jsonify
#        uses: ./jsonify
#        with:
#          value: ${{ steps.get-package-version.outputs.version }}
#      - run: "echo 'package version: ${{ steps.jsonify.outputs.version }}'"
#        shell: sh
#    outputs:
#      version: ${{ steps.get-package-version.outputs.version }}
#      version-json: ${{ steps.jsonify.outputs.json }}
#  get-repository-version-tags:
#    name: Get repository version tags
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - id: get-repository-version-tags
#        uses: ./get-repository-version-tags
#      - run: "echo 'repository version tags: ${{ steps.get-repository-version-tags.outputs.tags }}'"
#        shell: sh
#    outputs:
#      tags: ${{ steps.get-repository-version-tags.outputs.tags }}
#  array-includes-value:
#    name: Check if package version is in repository tags
#    runs-on: ubuntu-latest
#    needs: [get-package-version, get-repository-version-tags]
#    steps:
#      - uses: actions/checkout@v3
#      - id: array-includes-value
#        uses: ./array-includes-value
#        with:
#          array: ${{ needs.get-repository-version-tags.outputs.tags }}
#          value: ${{ needs.get-package-version.outputs.version-json }}
#      - run: "echo 'repository tags contain package version: ${{ steps.array-includes-value.outputs.includes }}'"
#        shell: sh
#    outputs:
#      includes: ${{ steps.array-includes-value.outputs.includes }}
#  add-new-version-tag:
#    name: Use package version as a tag to add to the repository if it does not exist yet
#    runs-on: ubuntu-latest
#    needs: [get-package-version, array-includes-value]
#    if: needs.array-includes-value.outputs.includes == 'false'
#    steps:
#      - uses: actions/checkout@v3
#      - id: build-version-tag
#        uses: ./build-version-tag
#        with:
#          version: ${{ needs.get-package-version.outputs.version }}
#      - id: tag-current-commit
#        uses: ./tag-current-commit
#        with:
#          tag: ${{ steps.build-version-tag.outputs.version-tag }}
